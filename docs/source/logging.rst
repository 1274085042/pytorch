.. role:: hidden
    :class: hidden-section

torch._logging
==============

PyTorch has a configurable logging system, where different components can be
given different log level settings. For instance, one component's log messages
can be completely disabled, while another component's log messages can be
set to maximum verbosity.

There are two ways to configure the logging system: through the environment variable ``TORCH_LOGS``
or the python API torch._logging.set_logs.

The following options are configurable through the ``TORCH_LOGS`` environment variable:

        dynamo
            The log level for the TorchDynamo component. Default: ``logging.WARN``

        aot
            The log level for the AOTAutograd component. Default: ``logging.WARN``

        inductor
            The log level for the TorchInductor component. Default: ``logging.WARN``

        bytecode
            Whether to emit the original and generated bytecode from TorchDynamo.
            Default: ``False``

        aot_graphs
            Whether to emit the graphs generated by AOTAutograd. Default: ``False``

        aot_joint_graph
            Whether to emit "aot_joint_graph" log artifacts. Default: ``False``

        ddp_graphs
            Whether to emit graphs generated by DDPOptimizer. Default: ``False``

        graph
            Whether to emit the graph captured by TorchDynamo in tabular format.
            Default: ``False``

        graph_code
            Whether to emit the python source of the graph captured by TorchDynamo.
            Default: ``False``

        guards
            Whether to emit the guards generated by TorchDynamo for each compiled
            function. Default: ``False``

        recompiles
            Whether to emit a guard failure reason and message every time
            TorchDynamo recompiles a function. Default: ``False``

        output_code
            Whether to emit the TorchInductor output code. Default: ``False``

        schedule
            Whether to emit the TorchInductor schedule. Default: ``False``

.. warning:: This feature is a prototype and may have compatibility breaking
    changes in the future.

.. warning:: This feature has not been expanded to control the log messages of
    all components in PyTorch yet.

.. automodule:: torch._logging
.. currentmodule:: torch._logging

.. autosummary::
    :toctree: generated
    :nosignatures:

    set_logs
