name: unstable

on:
  push:
    branches:
      - main
    tags:
      - ciflow/unstable/*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}-${{ github.ref_type == 'branch' && github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:
  # There must be at least one job here to satisfy GitHub action workflow syntax
  introduction:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Introduce PyTorch unstable workflow
        run: |
          echo "PyTorch unstable workflow is used to host experimental or flaky jobs"
          echo " that needs to be run for every commit, but doesn't block PR merging"
          echo " as part of the stable pull or trunk workflows."
          echo
          echo "In addition, a new label called ciflow/unstable can be attached to the"
          echo " PR to trigger this workflow. That can be done either manually or"
          echo " automatically using PyTorch auto-label bot."
          echo
          echo "Once the jobs are deemed stable enough (% red signal < 5% and TTS < 3h),"
          echo " they can graduate and move back to pull or trunk."

  linux-vulkan-bionic-py3_11-clang9-build:
    name: linux-vulkan-bionic-py3.11-clang9
    uses: ./.github/workflows/_linux-build.yml
    with:
      build-environment: linux-vulkan-bionic-py3.11-clang9
      docker-image-name: pytorch-linux-bionic-py3.11-clang9
      test-matrix: |
        { include: [
          { config: "default", shard: 1, num_shards: 1, runner: "linux.2xlarge" },
        ]}

  linux-vulkan-bionic-py3_11-clang9-test:
    name: linux-vulkan-bionic-py3.11-clang9
    uses: ./.github/workflows/_linux-test.yml
    needs: linux-vulkan-bionic-py3_11-clang9-build
    with:
      build-environment: linux-vulkan-bionic-py3.11-clang9
      docker-image: ${{ needs.linux-vulkan-bionic-py3_11-clang9-build.outputs.docker-image }}
      test-matrix: ${{ needs.linux-vulkan-bionic-py3_11-clang9-build.outputs.test-matrix }}

  linux-focal-rocm5_4_2-py3_8-build:
    name: linux-focal-rocm5.4.2-py3.8
    uses: ./.github/workflows/_linux-build.yml
    with:
      build-environment: linux-focal-rocm5.4.2-py3.8
      docker-image-name: pytorch-linux-focal-rocm-n-py3
      sync-tag: rocm-build
      test-matrix: |
        { include: [
          { config: "default", shard: 1, num_shards: 3, runner: "linux.rocm.gpu" },
          { config: "default", shard: 2, num_shards: 3, runner: "linux.rocm.gpu" },
          { config: "default", shard: 3, num_shards: 3, runner: "linux.rocm.gpu" },
        ]}

  linux-focal-rocm5_4_2-py3_8-test:
    name: linux-focal-rocm5.4.2-py3.8
    uses: ./.github/workflows/_rocm-test.yml
    needs: linux-focal-rocm5_4_2-py3_8-build
    with:
      build-environment: linux-focal-rocm5.4.2-py3.8
      docker-image: ${{ needs.linux-focal-rocm5_4_2-py3_8-build.outputs.docker-image }}
      test-matrix: ${{ needs.linux-focal-rocm5_4_2-py3_8-build.outputs.test-matrix }}
    secrets:
      AWS_OSSCI_METRICS_V2_ACCESS_KEY_ID: ${{ secrets.AWS_OSSCI_METRICS_V2_ACCESS_KEY_ID }}
      AWS_OSSCI_METRICS_V2_SECRET_ACCESS_KEY: ${{ secrets.AWS_OSSCI_METRICS_V2_SECRET_ACCESS_KEY }}

  macos-12-py3-arm64-build:
    name: macos-12-py3-arm64
    uses: ./.github/workflows/_mac-build.yml
    with:
      sync-tag: macos-12-py3-arm64-build
      build-environment: macos-12-py3-arm64
      runner-type: macos-m1-12
      build-generates-artifacts: true
      # To match the one pre-installed in the m1 runners
      python-version: 3.9.12
      # We need to set the environment file here instead of trying to detect it automatically because
      # MacOS arm64 is cross-compiled from x86-64. Specifically, it means that arm64 conda environment
      # is needed when building PyTorch MacOS arm64 from x86-64
      environment-file: .github/requirements/conda-env-macOS-ARM64
      test-matrix: |
        { include: [
          { config: "default", shard: 1, num_shards: 3, runner: "macos-m1-12" },
          { config: "default", shard: 2, num_shards: 3, runner: "macos-m1-12" },
          { config: "default", shard: 3, num_shards: 3, runner: "macos-m1-12" },
        ]}

  macos-12-py3-arm64-mps-test:
    name: macos-12-py3-arm64-mps
    uses: ./.github/workflows/_mac-test-mps.yml
    needs: macos-12-py3-arm64-build
    if: needs.macos-12-py3-arm64-build.outputs.build-outcome == 'success'
    with:
      sync-tag: macos-12-py3-arm64-mps-test
      build-environment: macos-12-py3-arm64
      # Same as the build job
      python-version: 3.9.12
      test-matrix: |
        { include: [
          { config: "default", shard: 1, num_shards: 1 },
        ]}

  macos-12-py3-arm64-test:
    name: macos-12-py3-arm64
    uses: ./.github/workflows/_mac-test.yml
    needs: macos-12-py3-arm64-build
    with:
      build-environment: macos-12-py3-arm64
      # Same as the build job
      python-version: 3.9.12
      test-matrix: ${{ needs.macos-12-py3-arm64-build.outputs.test-matrix }}
      arch: arm64
